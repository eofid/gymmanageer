package com.gym.management.gymmanager.logging;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.*;
import org.aspectj.lang.reflect.MethodSignature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import java.util.Arrays;

@Aspect
@Component
public class LoggingAspect {

    private final Logger logger = LoggerFactory.getLogger(this.getClass());

    // üìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤—ã–∑–æ–≤–æ–≤ –º–µ—Ç–æ–¥–æ–≤ –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö
    @Before("execution(* com.gym.management.gymmanager.service..*(..))")
    public void logBeforeMethodCall(JoinPoint joinPoint) {
        MethodSignature signature = (MethodSignature) joinPoint.getSignature();
        logger.info("–í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞: {} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: {}", signature.getMethod().getName(), Arrays.toString(joinPoint.getArgs()));
    }

    // üìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    @AfterReturning(pointcut = "execution(* com.gym.management.gymmanager.service..*(..))", returning = "result")
    public void logAfterReturning(JoinPoint joinPoint, Object result) {
        logger.info("–ú–µ—Ç–æ–¥ {} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω. –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {}", joinPoint.getSignature().getName(), result);
    }

    // ‚ö†Ô∏è –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    @AfterThrowing(pointcut = "execution(* com.gym.management.gymmanager..*(..))", throwing = "ex")
    public void logAfterThrowing(JoinPoint joinPoint, Throwable ex) {
        logger.error("–ú–µ—Ç–æ–¥ {} –≤—ã–±—Ä–æ—Å–∏–ª –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {}", joinPoint.getSignature().getName(), ex.getMessage(), ex);
    }
}
